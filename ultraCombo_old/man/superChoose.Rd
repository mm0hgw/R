% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/superChoose.R
\name{superChoose}
\alias{superChoose}
\title{superChoose}
\usage{
superChoose(n, k)
}
\arguments{
\item{n}{non-negative integer (vector), for
    \code{factorialZ}.  For \code{chooseZ}, may be a \code{bigz} big
    integer, also negative.}

\item{k}{non-negative integer vector.}
}
\description{
Choose values calculated with integer accuracy.
}
\examples{
# regular base::choose() output
outer(seq(11),seq(11),FUN=superChoose)
n<-1
# step up to below system limit
while(hashChoose(n+1,(n+1)\%/\%2)<integer.precision.limit){
n<-n+1
}
k<-n\%/\%2
# this is accurate
hashChoose(n,k)
hashChoose(n,k-1)
# the above should exactly sum to the below
hashChoose(n+1,k)
class(superChoose(n,k))
# throws an error without 'gmp' installed
try(superChoose(n+1,k)-hashChoose(n+1,k))
if(require(gmp)){
print(out<-superChoose(n+1,k))
print(class(out))
print(paste('n',n,'k',k))
print(outer(seq(5)-3+n,seq(3)-2+k,FUN=superChoose))
print(outer(seq(11)-6+n,seq(11)-6+k,FUN=superChoose) -
outer(seq(11)-6+n,seq(11)-6+k,FUN=hashChoose))
}
}

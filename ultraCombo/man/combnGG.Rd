% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/combnG.R
\name{combnGG}
\alias{combnGG}
\title{Combination Generator Generator}
\usage{
combnGG(n, k)
}
\arguments{
\item{n}{an integer, n of combination}

\item{k}{an integer, k of combination}
}
\value{
a 'function (x,.combine=rbind)' that takes
reference integers in the range 1:choose(n,k) and returns
the requested combinations bound as specified.
}
\description{
Creates a generator function that transforms
reference integer vectors into combination matrices.
}
\examples{
#define combination
n<-8
k<-5
combnGen<-combnGG(n,k)
# generate single combinations
stopifnot(0==sum(combnGen(1)!=seq(k)))
stopifnot(0==sum(combnGen(2)!=c(seq(k-1),k+1)))
stopifnot(0==sum(combnGen(choose(n,k))!=seq(to=n,length.out=k)))
#define larger combination
n2<-choose(n,k)
k2<-9
combnGen2<-combnGG(n2,k2)
stopifnot(0==sum(combnGen2(1)!=seq(k2)))
stopifnot(0==sum(combnGen2(2)!=c(seq(k2-1),k2+1)))
stopifnot(0==sum(combnGen2(choose(n2,k2))!=seq(to=n2,length.out=k2)))
#generate random index
index <- ceiling(runif(1)*choose(n2,k2))
#use index to look up indices
indices <- combnGen2(index)
# generate result
combnGen(indices)
}
\author{
Dale Potter, \email{dale@piratepress.org}
}

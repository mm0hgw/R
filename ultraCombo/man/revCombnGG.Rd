% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/revCombnG.R
\name{revCombnGG}
\alias{revCombnGG}
\title{Reverse Combination Generator Generator}
\usage{
revCombnGG(n, k)
}
\arguments{
\item{n}{integer < .Machine$integer.max, size of the set from which combination is generated}
}
\value{
a 'function (x)' that takes
combination matrices and returns reference integers.
}
\description{
Creates a function with a precomputed 
look-up table which returns a
reference integer vector when fed with a matrix
of combinations in rows.
}
\examples{
n<-10
revCombnGen<-revCombnGG(n,7)
i<-cbind(seq(4),5,6,7,8,9,10)
j<-revCombnGen(i)
j
combnG(j,n,ncol(i))

#define game
n<-25
game<-function(n){
k<-ceiling(runif(1,0,n))
out<-vector()
for(i in seq(k)){
l<-setdiff(seq(n),out)
out<-c(l[ceiling(runif(1)*length(l))],out)
}
out[order(out)]
}
revCombnGen<-revCombnGG(n,length(g))
g<-game(n)
g
i<-revCombnGen(g)
k<-length(g)
print(i)
combnG(i,n,k)
stopifnot(sum(g!=.Last.value)==0)
}
\author{
Dale Potter, \email{dale@piratepress.org}
}
